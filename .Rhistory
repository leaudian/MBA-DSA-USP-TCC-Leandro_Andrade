#Remoção das variáveis que não farão parte das Redes Neurais
BD_Neural_Networks<-select(BD_Amostra,everything(),
-Estado_man,
-Estado_vis,
-rodada,
-idade_media_titular_man,
-idade_media_titular_vis,
-Aprov_3_man,
-Aprov_5_man,
-Aprov_1_vis,
-Aprov_3_vis,
-Finalista_Copa_Brasil_vis,
-Finalista_Estadual_man,
-Finalista_Estadual_vis,
-Batch_Fold_Index)
#Alterando a ordem das colunas no dataset (Batch / Var de Saída / Var Cat / Var Cont)
BD_Neural_Networks<-BD_Neural_Networks %>%
relocate(Finalista_Brasileiro_vis,.after = time_vis) %>%
relocate(Finalista_Brasileiro_man,.after = time_vis) %>%
relocate(Finalista_Copa_Brasil_man,.after = time_vis) %>%
relocate(Libertadores_vis,.after = time_vis) %>%
relocate(Libertadores_man,.after = time_vis)
#----------------------------------------#
#--Normalização das variáveis contínuas--#
#----------------------------------------#
BD_NN_Normalizada<-BD_Neural_Networks %>%
mutate(gols_man=(gols_man-min(gols_man))/(max(gols_man-min(gols_man)))) %>%
mutate(gols_vis=(gols_vis-min(gols_vis))/(max(gols_vis)-min(gols_vis))) %>%
mutate(ano_campeonato=(ano_campeonato-min(ano_campeonato))/(max(ano_campeonato)-min(ano_campeonato))) %>%
mutate(colocacao_man=(colocacao_man-min(colocacao_man))/(max(colocacao_man)-min(colocacao_man))) %>%
mutate(colocacao_vis=(colocacao_vis-min(colocacao_vis))/(max(colocacao_vis)-min(colocacao_vis))) %>%
mutate(med_acum_gols_m_man=(med_acum_gols_m_man-min(med_acum_gols_m_man))/(max(med_acum_gols_m_man)-min(med_acum_gols_m_man))) %>%
mutate(med_acum_gols_m_vis=(med_acum_gols_m_vis-min(med_acum_gols_m_vis))/(max(med_acum_gols_m_vis)-min(med_acum_gols_m_vis))) %>%
mutate(med_acum_gols_s_man=(med_acum_gols_s_man-min(med_acum_gols_s_man))/(max(med_acum_gols_s_man)-min(med_acum_gols_s_man))) %>%
mutate(med_acum_gols_s_vis=(med_acum_gols_s_vis-min(med_acum_gols_s_vis))/(max(med_acum_gols_s_vis)-min(med_acum_gols_s_vis)))
#----------------------------------------#
#--Normalização das variáveis binárias---#
#----------------------------------------#
#Participação do time mandante na libertadores
BD_NN_Normalizada<- BD_NN_Normalizada%>%
mutate(Libertadores_man=case_when(
Libertadores_man=="Sim"~1,
Libertadores_man=="Nao"~0))
#Participação do time mandante na libertadores
BD_NN_Normalizada<- BD_NN_Normalizada%>%
mutate(Libertadores_vis=case_when(
Libertadores_vis=="Sim"~1,
Libertadores_vis=="Nao"~0))
#Time mandante finalista da Copa do Brasil
BD_NN_Normalizada<- BD_NN_Normalizada%>%
mutate(Finalista_Copa_Brasil_man=case_when(
Finalista_Copa_Brasil_man=="Campeao"~1,
Finalista_Copa_Brasil_man=="Vice"~1,
Finalista_Copa_Brasil_man=="Nao"~0))
#Time mandante finalista do Campeonato Brasileiro
BD_NN_Normalizada<- BD_NN_Normalizada%>%
mutate(Finalista_Brasileiro_man=case_when(
Finalista_Brasileiro_man=="Campeao"~1,
Finalista_Brasileiro_man=="Vice"~1,
Finalista_Brasileiro_man=="Nao"~0))
#Time visitante finalista do Campeonato Brasileiro
BD_NN_Normalizada<- BD_NN_Normalizada%>%
mutate(Finalista_Brasileiro_vis=case_when(
Finalista_Brasileiro_vis=="Campeao"~1,
Finalista_Brasileiro_vis=="Vice"~1,
Finalista_Brasileiro_vis=="Nao"~0))
#----------------------------------------#
#----Dummy das variáveis categoricas-----#
#----------------------------------------#
#Criação das Variáveis Dummy para o nome dos clubes mandantes e visitantes
BD_NN_Normalizada <- BD_NN_Normalizada %>%tibble() %>%dummy_cols()
#Inclusão da coluna referente aos lotes
BD_NN_Normalizada <- bind_cols(BD_Amostra$Batch_Fold_Index,BD_NN_Normalizada)
names(BD_NN_Normalizada)[1]<-"Batch_Fold_Index"
#Ajuste no nome das colunas
names(BD_NN_Normalizada)<-make.names(names(BD_NN_Normalizada))
#Remoção das variáveis referentes ao nome dos clubes mandantes e visitantes
#Remoção da variavel referente time do vitoria (Dummy Trap)
BD_NN_Normalizada<-select(BD_NN_Normalizada,everything(),
-time_man,
-time_vis,
-time_man_Vitoria,
-time_vis_Vitoria)
rm(BD_Neural_Networks)
#----------------------------------------#
#----------Carregar bibliotecas----------#
#----------------------------------------#
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
library(DataEditR)
library(fastDummies)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Amostra<-read_excel(paste0(Caminho,"BD_Amostra_Backup.xlsx"))
#Remoção das variáveis que não farão parte das Redes Neurais
BD_Normalizado<-select(BD_Amostra,everything(),
-Estado_man,
-Estado_vis,
-rodada,
-idade_media_titular_man,
-idade_media_titular_vis,
-Aprov_3_man,
-Aprov_5_man,
-Aprov_1_vis,
-Aprov_3_vis,
-Finalista_Copa_Brasil_vis,
-Finalista_Estadual_man,
-Finalista_Estadual_vis,
-Batch_Fold_Index)
#Alterando a ordem das colunas no dataset (Batch / Var de Saída / Var Cat / Var Cont)
BD_Normalizado<-BD_Normalizado %>%
relocate(Finalista_Brasileiro_vis,.after = time_vis) %>%
relocate(Finalista_Brasileiro_man,.after = time_vis) %>%
relocate(Finalista_Copa_Brasil_man,.after = time_vis) %>%
relocate(Libertadores_vis,.after = time_vis) %>%
relocate(Libertadores_man,.after = time_vis)
#----------------------------------------#
#--Normalização das variáveis contínuas--#
#----------------------------------------#
BD_Normalizado<-BD_Normalizado %>%
mutate(gols_man=(gols_man-min(gols_man))/(max(gols_man-min(gols_man)))) %>%
mutate(gols_vis=(gols_vis-min(gols_vis))/(max(gols_vis)-min(gols_vis))) %>%
mutate(ano_campeonato=(ano_campeonato-min(ano_campeonato))/(max(ano_campeonato)-min(ano_campeonato))) %>%
mutate(colocacao_man=(colocacao_man-min(colocacao_man))/(max(colocacao_man)-min(colocacao_man))) %>%
mutate(colocacao_vis=(colocacao_vis-min(colocacao_vis))/(max(colocacao_vis)-min(colocacao_vis))) %>%
mutate(med_acum_gols_m_man=(med_acum_gols_m_man-min(med_acum_gols_m_man))/(max(med_acum_gols_m_man)-min(med_acum_gols_m_man))) %>%
mutate(med_acum_gols_m_vis=(med_acum_gols_m_vis-min(med_acum_gols_m_vis))/(max(med_acum_gols_m_vis)-min(med_acum_gols_m_vis))) %>%
mutate(med_acum_gols_s_man=(med_acum_gols_s_man-min(med_acum_gols_s_man))/(max(med_acum_gols_s_man)-min(med_acum_gols_s_man))) %>%
mutate(med_acum_gols_s_vis=(med_acum_gols_s_vis-min(med_acum_gols_s_vis))/(max(med_acum_gols_s_vis)-min(med_acum_gols_s_vis)))
#----------------------------------------#
#--Normalização das variáveis binárias---#
#----------------------------------------#
#Participação do time mandante na libertadores
BD_Normalizado<- BD_Normalizado%>%
mutate(Libertadores_man=case_when(
Libertadores_man=="Sim"~1,
Libertadores_man=="Nao"~0))
#Participação do time mandante na libertadores
BD_Normalizado<- BD_Normalizado%>%
mutate(Libertadores_vis=case_when(
Libertadores_vis=="Sim"~1,
Libertadores_vis=="Nao"~0))
#Time mandante finalista da Copa do Brasil
BD_Normalizado<- BD_Normalizado%>%
mutate(Finalista_Copa_Brasil_man=case_when(
Finalista_Copa_Brasil_man=="Campeao"~1,
Finalista_Copa_Brasil_man=="Vice"~1,
Finalista_Copa_Brasil_man=="Nao"~0))
#Time mandante finalista do Campeonato Brasileiro
BD_Normalizado<- BD_Normalizado%>%
mutate(Finalista_Brasileiro_man=case_when(
Finalista_Brasileiro_man=="Campeao"~1,
Finalista_Brasileiro_man=="Vice"~1,
Finalista_Brasileiro_man=="Nao"~0))
#Time visitante finalista do Campeonato Brasileiro
BD_Normalizado<- BD_Normalizado%>%
mutate(Finalista_Brasileiro_vis=case_when(
Finalista_Brasileiro_vis=="Campeao"~1,
Finalista_Brasileiro_vis=="Vice"~1,
Finalista_Brasileiro_vis=="Nao"~0))
#----------------------------------------#
#----Dummy das variáveis categoricas-----#
#----------------------------------------#
#Criação das Variáveis Dummy para o nome dos clubes mandantes e visitantes
BD_Normalizado <- BD_Normalizado %>%tibble() %>%dummy_cols()
#Inclusão da coluna referente aos lotes
BD_Normalizado <- bind_cols(BD_Amostra$Batch_Fold_Index,BD_Normalizado)
names(BD_Normalizado)[1]<-"Batch_Fold_Index"
#Ajuste no nome das colunas
names(BD_Normalizado)<-make.names(names(BD_Normalizado))
#Remoção das variáveis referentes ao nome dos clubes mandantes e visitantes
#Remoção da variavel referente time do vitoria (Dummy Trap)
BD_Normalizado<-select(BD_Normalizado,everything(),
-time_man,
-time_vis,
-time_man_Vitoria,
-time_vis_Vitoria)
rm(BD_Neural_Networks)
write.xlsx(BD_Normalizado, "BD_Normalizado_Backup.xlsx",sheetName = "BD_Normalizado")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado.xlsx"))
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#----------------------------------------#
#----------Carregar bibliotecas----------#
#----------------------------------------#
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-select(BD_Normalizado,everything())
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
library(neuralnet)
library(rpart)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-select(BD_Normalizado,everything())
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-select(BD_Normalizado)
names(BD_Normalizado)[20]
names(BD_Normalizado)[19]
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-BD_Normalizado[,19]
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-BD_Normalizado[,1:19]
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
library(neuralnet)
library(rpart)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-BD_Normalizado[,1:19]
rm(BD_Normalizado)
BD_Treino<-BD_Neural_Networks %>% filter(!BD_Neural_Networks$Batch_Fold_Index=="A"
BD_Teste<-BD_Neural_Networks %>% filter(BD_Neural_Networks$Batch_Fold_Index=="A")
BD_Treino<-BD_Neural_Networks %>% filter(!BD_Neural_Networks$Batch_Fold_Index=="A")
BD_Teste<-BD_Neural_Networks %>% filter(BD_Neural_Networks$Batch_Fold_Index=="A")
funcao_ativacao<-"logistic"
#funcao_ativacao<-function(x) log(1+exp(x))
#funcao_ativacao<-function(x) ifelse(x>=0,x,0)
camadas<-5
#camadas<-10
#camadas<-30
neuronios<-10
#neuronios<-50
#neuronios<-100
rede<-rep(neuronios,each=camadas)
lr<-0.1
#lr<-0.05
#lr<-0.01
#Simplificação da formula da rede
var_explicativas<-names(BD_Treino)[4:dim(BD_Treino)[2]]
equacao<-as.formula(paste("gols_man+gols_vis~",paste(var_explicativas,collapse = "+")))
melhor_tempo<-Sys.time()
#Elaboração da rede
nn<-neuralnet(equacao,
data = BD_Treino,
hidden = rede,
act.fct = funcao_ativacao,
learningrate = lr)
melhor_tempo<-Sys.time()-melhor_tempo
?Hmisc
?chisq.test
?neuralnet::compute
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Amostra<-read_excel(paste0(Caminho,"BD_Amostra_Backup.xlsx"))
#Remoção das variáveis que não farão parte da análise de correspoindência
BD_AnaCor<-select(BD_Amostra,everything(),
-Batch_Fold_Index,
-Estado_man,
-Estado_vis)
#valor da equipe mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(valor_equipe_titular_man=case_when(
valor_equipe_titular_man<=quantile(valor_equipe_titular_man,0.25)~"val_menores",
valor_equipe_titular_man>quantile(valor_equipe_titular_man,0.25) &
valor_equipe_titular_man<=quantile(valor_equipe_titular_man,0.5)~"val_int_baixos",
valor_equipe_titular_man>quantile(valor_equipe_titular_man,0.5) &
valor_equipe_titular_man<=quantile(valor_equipe_titular_man,0.75)~"val_int_altos",
valor_equipe_titular_man>quantile(valor_equipe_titular_man,0.75)~"val_maiores"))
#valor da equipe visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(valor_equipe_titular_vis=case_when(
valor_equipe_titular_vis<=quantile(valor_equipe_titular_vis,0.25)~"val_menores",
valor_equipe_titular_vis>quantile(valor_equipe_titular_vis,0.25) &
valor_equipe_titular_vis<=quantile(valor_equipe_titular_vis,0.5)~"val_int_baixos",
valor_equipe_titular_vis>quantile(valor_equipe_titular_vis,0.5) &
valor_equipe_titular_vis<=quantile(valor_equipe_titular_vis,0.75)~"val_int_altos",
valor_equipe_titular_vis>quantile(valor_equipe_titular_vis,0.75)~"val_maiores"))
#idade da equipe mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(idade_media_titular_man=case_when(
idade_media_titular_man<=quantile(idade_media_titular_man,0.25)~"id_menores",
idade_media_titular_man>quantile(idade_media_titular_man,0.25) &
idade_media_titular_man<=quantile(idade_media_titular_man,0.5)~"id_int_baixos",
idade_media_titular_man>quantile(idade_media_titular_man,0.5) &
idade_media_titular_man<=quantile(idade_media_titular_man,0.75)~"id_int_altos",
idade_media_titular_man>quantile(idade_media_titular_man,0.75)~"id_maiores"))
#idade da equipe visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(idade_media_titular_vis=case_when(
idade_media_titular_vis<=quantile(idade_media_titular_vis,0.25)~"id_menores",
idade_media_titular_vis>quantile(idade_media_titular_vis,0.25) &
idade_media_titular_vis<=quantile(idade_media_titular_vis,0.5)~"id_int_baixos",
idade_media_titular_vis>quantile(idade_media_titular_vis,0.5) &
idade_media_titular_vis<=quantile(idade_media_titular_vis,0.75)~"id_int_altos",
idade_media_titular_vis>quantile(idade_media_titular_vis,0.75)~"id_maiores" ))
#Aproveitamento da última rodada do mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_1_man=case_when(
Aprov_1_man<=quantile(Aprov_1_man,0.25)~"apr_menores",
Aprov_1_man>quantile(Aprov_1_man,0.25) &
Aprov_1_man<=quantile(Aprov_1_man,0.5)~"apr_int_baixos",
Aprov_1_man>quantile(Aprov_1_man,0.5) &
Aprov_1_man<=quantile(Aprov_1_man,0.75)~"apr_int_altos",
Aprov_1_man>quantile(Aprov_1_man,0.75)~"apr_maiores"))
#Aproveitamento das 3 últimas rodadas do mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_3_man=case_when(
Aprov_3_man<=quantile(Aprov_3_man,0.25)~"apr_menores",
Aprov_3_man>quantile(Aprov_3_man,0.25) &
Aprov_3_man<=quantile(Aprov_3_man,0.5)~"apr_int_baixos",
Aprov_3_man>quantile(Aprov_3_man,0.5) &
Aprov_3_man<=quantile(Aprov_3_man,0.75)~"apr_int_altos",
Aprov_3_man>quantile(Aprov_3_man,0.75)~"apr_maiores"))
#Aproveitamento das 5 últimas rodadas do mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_5_man=case_when(
Aprov_5_man<=quantile(Aprov_5_man,0.25)~"apr_menores",
Aprov_5_man>quantile(Aprov_5_man,0.25) &
Aprov_5_man<=quantile(Aprov_5_man,0.5)~"apr_int_baixos",
Aprov_5_man>quantile(Aprov_5_man,0.5) &
Aprov_5_man<=quantile(Aprov_5_man,0.75)~"apr_int_altos",
Aprov_5_man>quantile(Aprov_5_man,0.75)~"apr_maiores"))
#Aproveitamento da última rodada do visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_1_vis=case_when(
Aprov_1_vis<=quantile(Aprov_1_vis,0.25)~"apr_menores",
Aprov_1_vis>quantile(Aprov_1_vis,0.25) &
Aprov_1_vis<=quantile(Aprov_1_vis,0.5)~"apr_int_baixos",
Aprov_1_vis>quantile(Aprov_1_vis,0.5) &
Aprov_1_vis<=quantile(Aprov_1_vis,0.75)~"apr_int_altos",
Aprov_1_vis>quantile(Aprov_1_vis,0.75)~"apr_maiores"))
#Aproveitamento das 3 últimas rodadas do visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_3_vis=case_when(
Aprov_3_vis<=quantile(Aprov_3_vis,0.25)~"apr_menores",
Aprov_3_vis>quantile(Aprov_3_vis,0.25) &
Aprov_3_vis<=quantile(Aprov_3_vis,0.5)~"apr_int_baixos",
Aprov_3_vis>quantile(Aprov_3_vis,0.5) &
Aprov_3_vis<=quantile(Aprov_3_vis,0.75)~"apr_int_altos",
Aprov_3_vis>quantile(Aprov_3_vis,0.75)~"apr_maiores"))
#Aproveitamento das 5 últimas rodadas do visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(Aprov_5_vis=case_when(
Aprov_5_vis<=quantile(Aprov_5_vis,0.25)~"apr_menores",
Aprov_5_vis>quantile(Aprov_5_vis,0.25) &
Aprov_5_vis<=quantile(Aprov_5_vis,0.5)~"apr_int_baixos",
Aprov_5_vis>quantile(Aprov_5_vis,0.5) &
Aprov_5_vis<=quantile(Aprov_5_vis,0.75)~"apr_int_altos",
Aprov_5_vis>quantile(Aprov_5_vis,0.75)~"apr_maiores"))
#Média acumulada de gols marcados pelo mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(med_acum_gols_m_man=case_when(
med_acum_gols_m_man<=quantile(med_acum_gols_m_man,0.25)~"med_menores",
med_acum_gols_m_man>quantile(med_acum_gols_m_man,0.25) &
med_acum_gols_m_man<=quantile(med_acum_gols_m_man,0.5)~"med_int_baixos",
med_acum_gols_m_man>quantile(med_acum_gols_m_man,0.5) &
med_acum_gols_m_man<=quantile(med_acum_gols_m_man,0.75)~"med_int_altos",
med_acum_gols_m_man>quantile(med_acum_gols_m_man,0.75)~"med_maiores"))
#Média acumulada de gols marcados pelo visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(med_acum_gols_m_vis=case_when(
med_acum_gols_m_vis<=quantile(med_acum_gols_m_vis,0.25)~"med_menores",
med_acum_gols_m_vis>quantile(med_acum_gols_m_vis,0.25) &
med_acum_gols_m_vis<=quantile(med_acum_gols_m_vis,0.5)~"med_int_baixos",
med_acum_gols_m_vis>quantile(med_acum_gols_m_vis,0.5) &
med_acum_gols_m_vis<=quantile(med_acum_gols_m_vis,0.75)~"med_int_altos",
med_acum_gols_m_vis>quantile(med_acum_gols_m_vis,0.75)~"med_maiores"))
#Média acumulada de gols sofridos pelo mandante
BD_AnaCor<-BD_AnaCor %>%
mutate(med_acum_gols_s_man=case_when(
med_acum_gols_s_man<=quantile(med_acum_gols_s_man,0.25)~"med_menores",
med_acum_gols_s_man>quantile(med_acum_gols_s_man,0.25) &
med_acum_gols_s_man<=quantile(med_acum_gols_s_man,0.5)~"med_int_menores",
med_acum_gols_s_man>quantile(med_acum_gols_s_man,0.5) &
med_acum_gols_s_man<=quantile(med_acum_gols_s_man,0.75)~"med_int_maiores",
med_acum_gols_s_man>quantile(med_acum_gols_s_man,0.75)~"med_maiores"))
#Média acumulada de gols sofridos pelo visitante
BD_AnaCor<-BD_AnaCor %>%
mutate(med_acum_gols_s_vis=case_when(
med_acum_gols_s_vis<=quantile(med_acum_gols_s_vis,0.25)~"med_menores",
med_acum_gols_s_vis>quantile(med_acum_gols_s_vis,0.25) &
med_acum_gols_s_vis<=quantile(med_acum_gols_s_vis,0.5)~"med_int_menores",
med_acum_gols_s_vis>quantile(med_acum_gols_s_vis,0.5) &
med_acum_gols_s_vis<=quantile(med_acum_gols_s_vis,0.75)~"med_int_maiores",
med_acum_gols_s_vis>quantile(med_acum_gols_s_vis,0.75)~"med_maiores"))
#---------------------------------------#
#---Conversão do BD_AnaCor em Factor----#
#---------------------------------------#
BD_AnaCor <- as.data.frame(unclass(BD_AnaCor), stringsAsFactors=TRUE)
BD_AnaCor<-BD_AnaCor %>% mutate(
gols_man=as.factor(gols_man),
gols_vis=as.factor(gols_vis),
rodada=as.factor(rodada),
colocacao_man=as.factor(colocacao_man),
colocacao_vis=as.factor(colocacao_vis),
ano_campeonato=as.factor(ano_campeonato))
P_Value_GM<-as.data.frame(P_Value_GM<-0)
P_Value_GV<-as.data.frame(P_Value_GV<-0)
Variavel<-as.data.frame(Variavel<-0)
#listar as variaveis de entrada do dataset que serão comparada com as variáveis de saída
for (i in 3:dim(BD_AnaCor)[2]){
Variavel[i-2,]<-names(BD_AnaCor)[i]
i<-i+1}
#Listar o P_Value da AnaCor comparada com os Gols do Mandante
for (i in 3:dim(BD_AnaCor)[2]){
tabela_contingencia<-table(BD_AnaCor$gols_man,BD_AnaCor[,i])
P_Value_GM[i-2,]<-round(chisq.test(x = tabela_contingencia)$p.value,4)
i<-i+1}
#Listar o P_Value da AnaCor comparada com os Gols do Visitante
for (i in 3:dim(BD_AnaCor)[2]){
tabela_contingencia<-table(BD_AnaCor$gols_vis,BD_AnaCor[,i])
P_Value_GV[i-2,]<-round(chisq.test(x = tabela_contingencia)$p.value,4)
i<-i+1}
#Unificar os datasets
P_Value_AnaCor<-bind_cols(Variavel,P_Value_GM,P_Value_GV)
names(P_Value_AnaCor)<-c("Variavel_Entrada","P_Value_G_Man","P_Value_G_Vis")
#Avaliar os resultados
P_Value_AnaCor<-mutate(P_Value_AnaCor,Analise=case_when(
P_Value_AnaCor$P_Value_G_Man>=0.05 & P_Value_AnaCor$P_Value_G_Vis>=0.05~"Variável pouco significativa"))
rm(i,tabela_contingencia,P_Value_GV,P_Value_GM,Variavel,BD_AnaCor,BD_Amostra)
view(P_Value_AnaCor)
library(dplyr)
library("tidyverse")
library(plotly)
library(openxlsx)
library(readxl)
library(Hmisc)
library(ltm)
library(psych)
library(PerformanceAnalytics)
library(ggrepel)
library(reshape2)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#----------------------------------------#
#--------Coeficiente de  Pearson---------#
#----------------------------------------#
# Coeficientes de correlação de Pearson para cada par de variáveis
rho <- rcorr(as.matrix(BD_Normalizado[,20:dim(BD_Normalizado)[2]]), type="pearson")
corr_coef <- rho$r # Matriz de correlações
corr_sig <- round(rho$P, 5) # Matriz com p-valor dos coeficientes
diag(corr_sig)<-1
#----------------------------------------#
#------------Análises--------------------#
#----------------------------------------#
# Teste de esfericidade de Bartlett nas variáveis Dummy
cortest.bartlett(BD_Normalizado[,20:93])
# Elaboração da análise fatorial por componentes principais
fatorial <- principal(BD_Normalizado[, 20:93],
nfactors = length(BD_Normalizado[, 20:93]),
rotate = "none",
scores = TRUE)
fatorial
# Eigenvalues (autovalores)
eigenvalues <- round(fatorial$values, 5)
eigenvalues
autovalores<-eigenvalues[1:38]
eigenvalues[30:40]
eigenvalues[1:10]
library(dplyr)
library("tidyverse")
library(openxlsx)
library(readxl)
library(neuralnet)
library(rpart)
#----------------------------------------#
#--------Carregar banco de dados---------#
#----------------------------------------#
#Caminho
Caminho=paste0(getwd(),"/")
#Carregar arquivo resultante da etapa anterior
BD_Normalizado<-read_excel(paste0(Caminho,"BD_Normalizado_Backup.xlsx"))
#Remoção das variáveis times (resultado da etapa de PCA)
BD_Neural_Networks<-BD_Normalizado[,1:19]
rm(BD_Normalizado)
